on:
    # Triggers the workflow on push or pull request events but only for the main branch
    workflow_call:
      inputs:
        environment:
          required: true
          type: string
        alert_slack_on_failure:
          description: "Sends an alert to the prod alerts channel if deployment fails"
          required: true
          default: false
          type: boolean
        notify_slack_on_deployment:
          description: "Send messages to the deployments channel when deploys start+finish."
          default: false
          type: boolean
      secrets:
        AWS_ACCOUNT:
          required: true
        SLACK_BOT_TOKEN:
          required: false
        SLACK_NOTIFICATION_CHANNEL_ID:
          required: false
        SLACK_DEPLOYMENTS_CHANNEL_ID:
          description: "[required if notify_slack_on_deployment=true]"
          required: false
jobs:
    deploy:
      name: ${{ matrix.app_name }}
      strategy:
        matrix:
          include:
            - app_name: "form-runner-adapter"
              image_location: ghcr.io/communitiesuk/funding-service-design-form-runner-adapter:sha-${{ github.sha }}
            - app_name: "form-designer-adapter"
              image_location: ghcr.io/communitiesuk/funding-service-design-form-designer-adapter:sha-${{ github.sha }}
      permissions:
        id-token: write # This is required for requesting the JWT
        contents: read  # This is required for actions/checkout
      runs-on: ubuntu-latest
      environment: ${{ inputs.environment }}
      steps:
      - name: Git clone the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
  
      - name: Setup Copilot
        uses: communitiesuk/funding-service-design-workflows/.github/actions/copilot_setup@main
        with:
          copilot_environment: ${{ inputs.environment }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
  
      - name: confirm copilot env
        shell: bash
        run: |
          if [ $(copilot env ls) != "${{ inputs.environment }}" ]; then
            echo $(copilot env ls)
            exit 1
          fi
  
      - name: Inject Git SHA into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-${{ matrix.app_name }}/manifest.yml
  
      - name: Inject replacement image into manifest
        run: |
          yq -i ".image.location = \"${{ matrix.image_location }}\""  copilot/fsd-${{ matrix.app_name }}/manifest.yml
  
      - name: Slack message for start of deployment
        id: slack_start_deployment_message
        if: ${{ inputs.notify_slack_on_deployment }}
        uses: communitiesuk/funding-service-design-workflows/.github/actions/slack_deployment_message@main
        with:
          stage: 'start'
          app_name: ${{ matrix.app_name }}
          environment: ${{ inputs.environment }}
          workflow_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack_channel_id: ${{ secrets.SLACK_DEPLOYMENTS_CHANNEL_ID }}
  
      - name: Copilot ${{ inputs.environment }} deploy
        id: deploy_build
        run: |
          copilot svc init --app pre-award --name fsd-${{ matrix.app_name }}
          copilot svc deploy --env ${{ inputs.environment }} --app pre-award --name fsd-${{ matrix.app_name }}
  
      - name: Slack message for end of deployment
        if: ${{ always() && inputs.notify_slack_on_deployment && steps.slack_start_deployment_message.outcome == 'success' }}
        uses: communitiesuk/funding-service-design-workflows/.github/actions/slack_deployment_message@main
        with:
          stage: 'end'
          app_name: ${{ matrix.app_name }}
          environment: ${{ inputs.environment }}
          workflow_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack_channel_id: ${{ secrets.SLACK_DEPLOYMENTS_CHANNEL_ID }}
  
          status: "${{ ( steps.deploy_build.outcome == 'success') && 'success' || 'failed' }}"
          slack_message_ts: ${{ steps.slack_start_deployment_message.outputs.slack_start_message_ts }}
          deployment_start_ts: ${{ steps.slack_start_deployment_message.outputs.timestamp }}
  
    notify_slack:
      name: Alert Slack if deployment fails
      needs:
        - deploy
      if: ${{ inputs.alert_slack_on_failure && always() && needs.deploy.result == 'failure' }}
      uses: communitiesuk/funding-service-design-workflows/.github/workflows/notify-slack-deployment-failed.yml@main
      with:
        app_name: digital-form-builder-adapter
        env_name: ${{ inputs.environment }}
        github_username: ${{ github.actor }}
        workflow_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        compare_url: ${{ github.event_name == 'push' && github.event.compare || null }}
      secrets:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SLACK_NOTIFICATION_CHANNEL_ID: ${{ secrets.SLACK_NOTIFICATION_CHANNEL_ID }}
  
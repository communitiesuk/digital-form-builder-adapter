name: CI Build and Dockerize (build outside Docker)

on:
  push:

permissions:
  contents: read
  packages: write

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: "funding-service-design-form-runner-adapter"
  IMAGE_NAME_DESIGNER: "funding-service-design-form-designer-adapter"
  IMAGE_REPO_PATH: "ghcr.io/${{github.repository_owner}}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - run: corepack enable

      - uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-

      - name: Clean legacy Yarn env (just in case)
        run: unset YARN_CACHE_DIR || true

      - name: Remove unwanted yarn.lock
        run: rm -f digital-form-builder/yarn.lock

      - name: Install deps
        env:
          YARN_CACHE_FOLDER: .yarn/cache
        run: yarn install --immutable --inline-builds

      - name: Build model
        run: yarn digital-form-builder/model build && yarn model build

      - name: Build runner
        run: yarn runner build

      - name: Build designer
        run: yarn designer build

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata Runner
        id: metadata_runner
        uses: docker/metadata-action@v4
        with:
          images: ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{env.VERSION}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=latest
            type=ref,event=branch

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push runner
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.metadata_runner.outputs.tags}}
          labels: ${{ steps.metadata_runner.outputs.labels }}
          push: true
          file: ./runner/runner.Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            LAST_TAG='${{env.VERSION}}'
            LAST_COMMIT='${{ github.sha }}'

      - name: Docker metadata Designer
        id: metadata_designer
        uses: docker/metadata-action@v4
        with:
          images: ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME_DESIGNER}}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{env.VERSION}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=latest
            type=ref,event=branch

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push designer
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.metadata_designer.outputs.tags}}
          labels: ${{ steps.metadata_designer.outputs.labels }}
          push: true
          file: ./designer/designer.Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            LAST_TAG='${{env.VERSION}}'
            LAST_COMMIT='${{ github.sha }}'

